buildscript {
  repositories { mavenCentral() }
  ext {
    springBootVersion = '1.3.5.RELEASE'
//    nexusHost = "52.69.66.154"
  }
  dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") }
}

task wrapper(type: Wrapper) { gradleVersion = '2.13' }

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'war'

group = 'spring.support'
version = '1.0.0-SNAPSHOT'

war {
  baseName = 'dlq-management'
  archiveName = "${baseName}.war"
}

repositories {
  mavenLocal()
  maven { url "http://${nexusHost}/nexus/content/repositories/spr" }
  mavenCentral()
  jcenter()
}

// javacオプション
compileJava { options.encoding = 'UTF-8' }
sourceCompatibility = 1.8
targetCompatibility = 1.8

// eclipse用プロジェクトファイル設定
eclipse {
  project {
    natures 'org.eclipse.wst.jsdt.core.jsNature'
    natures 'org.springframework.ide.eclipse.core.springnature'
    natures 'org.springsource.ide.eclipse.gradle.core.nature'

    buildCommand 'org.eclipse.wst.jsdt.core.javascriptValidator'
    buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
  }
  classpath {
    downloadSources = true
    downloadJavadoc = true

    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v7.0'
  }
}

// 依存ライブラリ。compileOnlyを使ってるので、Gradle2.2以降専用
dependencies {
  compile group: "${group}", name: "dlq-management-ui", version: "${version}"
  providedRuntime("org.springframework.boot:spring-boot-devtools")
  runtime group: 'oracle.jdbc', name: 'ojdbc7', version:'12.1.0.2.0'
  runtime group: 'com.googlecode.log4jdbc', name: 'log4jdbc', version:'1.2'
  providedRuntime group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat'
  testCompile('org.springframework.boot:spring-boot-starter-test')
}

// Spring Boot用設定
springBoot {
  executable = true
  excludeDevtools = true
  embeddedLaunchScriptProperties = [initInfoChkconfig:'2345 80 20']
}

bootRepackage {excludeDevtools = true}
bootRun { addResources = true }

// Mavenリポジトリへ配置する対象にソースとJavaDocのJARも含める
task sourcesJar(type: Jar, dependsOn:classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

// publish
publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId 'spring.support'
      artifactId 'dlq-management-web'
      version '1.0.0-SNAPSHOT'

      from components.web

      artifact sourcesJar { classifier "sources" }

      pom.withXml {
        asNode().appendNode('description', 'RabbitMQ DLQ Management Console Web Application')
      }
    }
  }
  repositories {
    maven {
      if(project.version.endsWith('-SNAPSHOT')) {
        url "http://${nexusHost}/nexus/content/repositories/spr-snapshots/"
      } else {
        url "http://${nexusHost}/nexus/content/repositories/spr-releases/"
      }
    }
  }
}
